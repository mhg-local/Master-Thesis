<module>
	<nodespace>
	</nodespace>
	<graph>
		<node name="flystick_source" type="DriverSensor">
			<param name="sensor_index" value="0"/>
			<param name="type" value="STICK2"/>
			<param name="driver" value="DTRACK"/>
		</node>
	
		<node name="flystick" type="HistoryProject">
			<param name="project">POSITION, ORIENTATION, DSCALAR</param>
		</node>
	
		<node name="sampling_mode" type="ConstantValue[int]">
			<param name="value" value="0" />
		</node>
		
		<node name="convert_button_0" type="TypeConvert[double,bool]"/>
		<node name="convert_button_1" type="TypeConvert[double,bool]"/>
		<!--	
		<node name="convert_button_2" type="TypeConvert[double,bool]"/>
		<node name="convert_button_3" type="TypeConvert[double,bool]"/>
		<node name="convert_button_4" type="TypeConvert[double,bool]"/>
		<node name="convert_button_5" type="TypeConvert[double,bool]"/>
		<node name="convert_button_6" type="TypeConvert[double,bool]"/>
		<node name="convert_button_7" type="TypeConvert[double,bool]"/>
		-->
		
		<!-- quality check - only forward pos and ori if quality is good enough -->
		<node name="quality_threshold" type="Threshold[double]">
			<param name="threshold" value="0.1"/>
			<param name="mode" value="output_zero"/>
		</node>
		<node name="quality_to_bool" type="TypeConvert[double,bool]"/>
		<node name="quality_check" type="ConditionalRoute" />

		<!-- tracker conversion -->
		<!-- offset in millimeters, because it is applied before scaling the pos -->
		<node name="to_dtrack_origin" type="ConstantValue[VistaVector3D]">
			<param name="value" value="0,0,0"/>
		</node>
		<node name="offset_rotate" type="Transform[VistaQuaternion,VistaVector3D]"/>
		<node name="translate_pos" type="Add[VistaVector3D]"/>
		<node name="scale_mm_to_m" type="ConstantValue[float]">
			<param name="value" value="0.001"/>
		</node>
		<node name="local_position" type="Multiply[float,VistaVector3D]"/>
		
		<node name="to_world_transform" type="GetTransform">
			<param name="object" value="CAM:MAIN"/>
		</node>
		<node name="world_orientation" type="Transform[VistaTransformMatrix,VistaQuaternion]"/>
		<node name="world_position" type="Transform[VistaTransformMatrix,VistaVector3D]"/>
		
		<!-- proximity warning node to indicate when one gets too close to walls -->
		<!-- note: check for duplicates with other flystick ProximityWarning in other xml's -->
		<node name="proximity" type="ProximityWarning">
			<param name="box_min" value="-2.625,  0, -2.625"/>
			<param name="box_max" value=" 2.625, 10,  2.625"/>
			<param name="safe_distance" value="0.75"/>
			<param name="danger_distance" value="0.3"/>
			<param name="type" value="sign"/>			
			<param name="size" value="0.0"/>
		</node>
		
		<!-- panic trigger - if all four lower buttons are pressed simultaneously, fade out the scenery -->
		<!--
		<node name="bool_1_and_4" type="And[bool]"/>
		<node name="bool_14_and_0" type="And[bool]"/>
		<node name="panic_toggle" type="Toggle">
			<param name="mode" value="on_change_to_true"/>
		</node>
		<node name="panic_fadeout" type="Fadeout">
			<param name="color" value="GRAY"/>
			<param name="fadeout_time" value="0.1"/>
			<param name="fadein_time" value="2.0"/>
		</node>
		-->

		
		<node name="application_context_node" type="application_context">
			<param name="object" value="application_context_object"/>
		</node>

		<!-- <node name="dd" type="DeviceDebug" /> -->		
	</graph>
	
	
	<edges>
		<!-- History project stick target -->
		<edge fromnode="flystick_source"	tonode="flystick"					fromport="history"		toport="history" />
		<!-- <edge fromnode="flystick_source"	tonode="dd"					fromport="history"		toport="history" /> -->
		<edge fromnode="sampling_mode"	tonode="flystick"					fromport="value"		toport="sampling_mode" />
	
		<!-- quality check -->
		<!-- <edge fromnode="flystick" tonode="quality_threshold" fromport="QUALITY" toport="in" /> -->
		<edge fromnode="quality_threshold" tonode="quality_to_bool" fromport="out" toport="in" />
		<edge fromnode="quality_to_bool" tonode="quality_check" fromport="out" toport="trigger" />
		<edge fromnode="flystick" tonode="quality_check" fromport="POSITION" toport="position" />
		<edge fromnode="flystick" tonode="quality_check" fromport="ORIENTATION" toport="orientation" />
		
		<!-- conversion of position and orientation -->
		<edge fromnode="flystick" tonode="offset_rotate" fromport="ORIENTATION" toport="first"/>
		<edge fromnode="to_dtrack_origin" tonode="offset_rotate" fromport="value" toport="second"/>
		<edge fromnode="flystick" tonode="translate_pos" fromport="POSITION" toport="first"/>
		<edge fromnode="offset_rotate" tonode="translate_pos" fromport="out" toport="second"/>
		<edge fromnode="translate_pos" tonode="local_position" fromport="out" toport="second"/>
		<edge fromnode="scale_mm_to_m" tonode="local_position" fromport="value" toport="first"/>
		
		<edge fromnode="to_world_transform" tonode="world_orientation" fromport="transform" toport="first"/>
		<edge fromnode="flystick" tonode="world_orientation" fromport="ORIENTATION" toport="second"/>
		<edge fromnode="to_world_transform" tonode="world_position" fromport="transform" toport="first"/>
		<edge fromnode="local_position" tonode="world_position" fromport="out" toport="second"/>
				
		<!-- panic fadeout -->
		<!--
		<edge fromnode="flystick" tonode="bool_1_and_4" fromport="BUTTONS_1" toport="first" />
		<edge fromnode="flystick" tonode="bool_1_and_4" fromport="BUTTONS_4" toport="second" />
		<edge fromnode="bool_1_and_4" tonode="bool_14_and_0" fromport="out" toport="first" />
		<edge fromnode="flystick" tonode="bool_14_and_0" fromport="BUTTONS_0" toport="second" />
		<edge fromnode="bool_14_and_0" tonode="panic_toggle" fromport="out" toport="toggle" />
		<edge fromnode="panic_toggle" tonode="panic_fadeout" fromport="out" toport="state" />
		-->
	
		<!-- forward to application context node -->
		<edge fromnode="world_position"		tonode="application_context_node"	fromport="out"	toport="pointer_pos"/>
		<edge fromnode="world_orientation"	tonode="application_context_node"	fromport="out"	toport="pointer_ori"/>
		<edge fromnode="world_position"		tonode="application_context_node"	fromport="out"	toport="cursor_pos"/>
		<edge fromnode="world_orientation"	tonode="application_context_node"	fromport="out"	toport="cursor_ori"/> 
	
		<!-- convert buttons from double to bool -->
		<edge fromnode="flystick"			tonode="convert_button_0"	fromport="DSCALAR_0"	toport="in" />
		<edge fromnode="flystick"			tonode="convert_button_1"	fromport="DSCALAR_1"	toport="in" />
		<!--
		<edge fromnode="flystick"			tonode="convert_button_2"	fromport="DSCALAR_2"	toport="in" />
		<edge fromnode="flystick"			tonode="convert_button_3"	fromport="DSCALAR_3"	toport="in" />
		<edge fromnode="flystick"			tonode="convert_button_4"	fromport="DSCALAR_4"	toport="in" />
		<edge fromnode="flystick"			tonode="convert_button_5"	fromport="DSCALAR_5"	toport="in" />
		<edge fromnode="flystick"			tonode="convert_button_6"	fromport="DSCALAR_6"	toport="in" />
		<edge fromnode="flystick"			tonode="convert_button_7"	fromport="DSCALAR_7"	toport="in" />
		-->
		
		<!-- forward buttons to application -->
		<edge fromnode="convert_button_0"	tonode="application_context_node"	fromport="out"	toport="action"/>
		<edge fromnode="convert_button_1"	tonode="application_context_node"	fromport="out"	toport="abort"/>
		<!--		
		<edge fromnode="convert_button_2"	tonode="application_context_node"	fromport="out"	toport="abort"/>
		<edge fromnode="convert_button_3"	tonode="application_context_node"	fromport="out"	toport="open_menu"/>
		<edge fromnode="convert_button_4"	tonode="application_context_node"	fromport="out"	toport="toggle_particles"/>
		<edge fromnode="convert_button_5"	tonode="application_context_node"	fromport="out"	toport="toggle_outer_hull"/>
		<edge fromnode="convert_button_6"	tonode="application_context_node"	fromport="out"	toport="toggle_rotations"/>
		<edge fromnode="convert_button_7"	tonode="application_context_node"	fromport="out"	toport="toggle_inner_hull"/>
		-->
	</edges>
</module>
